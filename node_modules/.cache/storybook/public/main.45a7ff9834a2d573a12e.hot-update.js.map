{"version":3,"file":"main.45a7ff9834a2d573a12e.hot-update.js","sources":["webpack:///./src/Button/CustomButton.tsx","webpack:///./src/stories/Button.stories.tsx","webpack:///./src/stories/SearchInput.stories.tsx"],"sourcesContent":["import React from 'react'\nimport { Button } from 'antd'\n/**\n  color data type for all component\n */\n// export type IColorType = `${string}`;\n\n/**\n * CustomButton properties.\n */\nexport interface ICustomButtonProps\n  extends React.DetailedHTMLProps<\n    React.ButtonHTMLAttributes<HTMLButtonElement>,\n    HTMLButtonElement\n  > {\n  /**\n     background color\n     */\n  backgroundColor?: string\n  /**\n     Text color\n     */\n  color?: string\n  /**\n     Size of button\n     */\n  size?: 'large' | 'middle' | 'small'\n  /**\n   * Shapes\n   */\n  shape?: 'default' | 'circle' | 'round'\n  /**\n     Height of button\n     */\n  height?: string\n  /**\n     Width of Button\n     */\n  width?: string\n  /**\n     Function for onClick\n     */\n  onClick?: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void\n  /**\n     value\n     */\n  value?: string | number\n  /** type of the button (antd) */\n  htmlType?: 'submit' | 'reset' | 'button'\n}\n/**\n CustomButton component\n */\nexport const CustomButton: React.FunctionComponent<ICustomButtonProps> = (\n  props\n) => {\n  // props Destructuring\n  const {\n    children,\n    backgroundColor,\n    color,\n    size,\n    height,\n    width,\n    shape,\n    htmlType,\n    onClick,\n    disabled\n  } = props\n  let antdDefaultProps = {}\n  if (htmlType) antdDefaultProps = { htmlType }\n  // object for custom css\n  const styles: ICustomButtonProps = {\n    height: '',\n    width: '',\n    backgroundColor: '',\n    color: ''\n  }\n  if (size) styles.size = size\n  if (color) styles.color = color\n  if (backgroundColor) styles.backgroundColor = backgroundColor\n  if (height) styles.height = height\n  if (width) styles.width = width\n  if (shape) styles.shape = shape\n\n  return (\n    <Button\n      {...antdDefaultProps}\n      disabled={disabled}\n      shape={shape}\n      size={size}\n      style={styles}\n      onClick={onClick}\n    >\n      {children}\n    </Button>\n  )\n}\nCustomButton.displayName = 'CustomButton'\nCustomButton.defaultProps = {\n  children: 'hii joveo',\n  size: 'middle',\n  shape: 'default'\n}\n","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\nimport { ComponentStory, ComponentMeta } from '@storybook/react';\\nimport { CustomButton } from '..';\\n\\nexport default {\\n    title: 'Button',\\n    component: CustomButton,\\n    argTypes: {\\n        backgroundColor: { control: 'color' },\\n        height: { type: 'string' },\\n        width: { type: 'string' },\\n        color: { control: 'color' },\\n        size: { options: ['large', 'middle', 'small'], control: { type: 'select' } }\\n    }\\n} as ComponentMeta<typeof CustomButton>;\\n\\nconst Template: ComponentStory<typeof CustomButton> = (args) => <CustomButton {...args}>hello joveo</CustomButton>;\\nexport const Variants = Template.bind({});\\nVariants.args = {\\n    size: 'middle',\\n    shape: 'default'\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Variants\":{\"startLoc\":{\"col\":54,\"line\":17},\"endLoc\":{\"col\":114,\"line\":17},\"startBody\":{\"col\":54,\"line\":17},\"endBody\":{\"col\":114,\"line\":17}}};\n    \nimport React from 'react';\nimport { ComponentStory, ComponentMeta } from '@storybook/react';\nimport { CustomButton } from '..';\n\nexport default {\n    title: 'Button',\n    component: CustomButton,\n    argTypes: {\n        backgroundColor: { control: 'color' },\n        height: { type: 'string' },\n        width: { type: 'string' },\n        color: { control: 'color' },\n        size: { options: ['large', 'middle', 'small'], control: { type: 'select' } }\n    }\n} as ComponentMeta<typeof CustomButton>;\n\nconst Template: ComponentStory<typeof CustomButton> = (args) => <CustomButton {...args}>hello joveo</CustomButton>;\nexport const Variants = Template.bind({});\nVariants.args = {\n    size: 'middle',\n    shape: 'default'\n};\n\n\n\nVariants.parameters = { storySource: { source: \"(args) => <CustomButton {...args}>hello joveo</CustomButton>\" }, ...Variants.parameters };","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\nimport { ComponentStory, ComponentMeta } from '@storybook/react';\\nimport { SearchInput } from '..';\\n\\nexport default {\\n    title: 'Search input',\\n    component: SearchInput,\\n   \\n} as ComponentMeta<typeof SearchInput>;\\n\\nconst Template: ComponentStory<typeof SearchInput> = (args) => <SearchInput ></SearchInput>;\\nexport const Variants = Template.bind({});\\n\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Variants\":{\"startLoc\":{\"col\":53,\"line\":11},\"endLoc\":{\"col\":91,\"line\":11},\"startBody\":{\"col\":53,\"line\":11},\"endBody\":{\"col\":91,\"line\":11}}};\n    \nimport React from 'react';\nimport { ComponentStory, ComponentMeta } from '@storybook/react';\nimport { SearchInput } from '..';\n\nexport default {\n    title: 'Search input',\n    component: SearchInput,\n   \n} as ComponentMeta<typeof SearchInput>;\n\nconst Template: ComponentStory<typeof SearchInput> = (args) => <SearchInput ></SearchInput>;\nexport const Variants = Template.bind({});\n\n\n\n\nVariants.parameters = { storySource: { source: \"(args) => <SearchInput ></SearchInput>\" }, ...Variants.parameters };"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAwCA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AANA;AAAA;AAWA;AA5CA;AA6CA;AACA;AACA;AACA;AACA;AAHA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAHA;AACA;AAWA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AAFA;AAOA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;;AAEA;AACA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AACA;AADA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}